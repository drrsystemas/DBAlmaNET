// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace DRR.Core.DBAlmaNET.Models
{
    public partial class AplicacionLicencia
    {
        public AplicacionLicencia()
        {
            AplicacionLicenciaActividad = new HashSet<AplicacionLicenciaActividad>();
            AplicacionLicenciaModulo = new HashSet<AplicacionLicenciaModulo>();
            Empresa = new HashSet<Empresa>();
        }

        [Key]
        [Column("LicenciaID")]
        public int LicenciaId { get; set; }
        /// <summary>
        /// Codigo Cliente
        /// </summary>
        [Column("ClienteID")]
        public int ClienteId { get; set; }
        [StringLength(150)]
        [Unicode(false)]
        public string RazonSocial { get; set; }
        /// <summary>
        /// 0-Nada 1-Fiscal CUIT 2-Documento // Se obtiene de AlmaNet EntidadIdentificacionTipo
        /// </summary>
        public byte TipoNroIdentificacion { get; set; }
        /// <summary>
        /// Nro de Cuit/ Nro Documento, Cedula etc.
        /// </summary>
        public long NroIdentificacion { get; set; }
        /// <summary>
        /// Indicar el Nro de Telefono
        /// </summary>
        [StringLength(50)]
        [Unicode(false)]
        public string TelefonoNro { get; set; }
        [Column("LLave")]
        public byte[] Llave { get; set; }
        [Column("SupervisorID")]
        public int? SupervisorId { get; set; }
        [Column("VendedorID")]
        public int? VendedorId { get; set; }
        /// <summary>
        /// Indica q la licencia esta por azure 
        /// </summary>
        public bool? EsAzure { get; set; }
        public byte? CantidadTerminales { get; set; }
        /// <summary>
        /// 0- Solicitud Alta 1- Activada 2-Renovacion (Cambio PC) 3-Modif. Modulos
        /// </summary>
        [Column("EstadoID")]
        public short? EstadoId { get; set; }
        public byte? CantidadConsultores { get; set; }
        /// <summary>
        /// llave q se utiliza para acceso al servidor de las terminales
        /// </summary>
        public byte[] LlaveTerminales { get; set; }
        /// <summary>
        /// Tipo Liciencia (0-General 1-Lite(reducida, Monotributista)
        /// </summary>
        [Column("LicenciaTIpoID")]
        public byte? LicenciaTipoId { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? FechaSolicitud { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? FechaActivacion { get; set; }
        /// <summary>
        /// Inidica si sobre la llave se tiene q verificar saldo
        /// </summary>
        public bool? VerificarSaldo { get; set; }
        [StringLength(14)]
        [Unicode(false)]
        public string Version { get; set; }
        /// <summary>
        /// Resp. Inscripto- Resp. Monotributo, Consumidor Final, Etc. Se obtiene de AlmaNET ImpuestoCategoria
        /// </summary>
        [Column("CategoriaImpuestoID")]
        public byte? CategoriaImpuestoId { get; set; }
        /// <summary>
        /// Referencias sobre la instalacione de esta licencia
        /// </summary>
        [Unicode(false)]
        public string Observaciones { get; set; }
        /// <summary>
        /// Fecha actualizacion, Licencia (utilizada como referencia para e caso de verificar Saldo)
        /// </summary>
        [Column(TypeName = "date")]
        public DateTime? FechaActualizacion { get; set; }
        [StringLength(100)]
        public string NombreFantasia { get; set; }
        [StringLength(200)]
        public string Domicilio { get; set; }

        [InverseProperty("Licencia")]
        public virtual ICollection<AplicacionLicenciaActividad> AplicacionLicenciaActividad { get; set; }
        [InverseProperty("Licencia")]
        public virtual ICollection<AplicacionLicenciaModulo> AplicacionLicenciaModulo { get; set; }
        [InverseProperty("Licencia")]
        public virtual ICollection<Empresa> Empresa { get; set; }
    }
}